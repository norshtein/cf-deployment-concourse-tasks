#!/bin/bash -xeu

# shellcheck disable=SC1091
source cf-deployment-concourse-tasks/shared-functions

function check_fast_fails() {
  set +x

  if [ "${SKIP_LB_CREATION}" == "false" ]; then
    if [ -z "${LB_DOMAIN}" ]; then
      echo "\$LB_DOMAIN is a required parameter.  Please set the domain."
      exit 1
    fi

    if [ -z "${BBL_LB_CERT}"  ]; then
      echo "\$BBL_LB_CERT is a required parameter"
      exit 1
    fi

    if [ -z "${BBL_LB_KEY}"  ]; then
      echo "\$BBL_LB_KEY is a required parameter"
      exit 1
    fi
  fi

  check_bbl_input_params

  set -x
}

function write_bbl_certs() {
  set +x
 
  if [ -f "${BBL_LB_CERT}" ]; then
    bbl_cert_path="${BBL_LB_CERT}"
  else
    echo "${BBL_LB_CERT}" > /tmp/bbl-cert
    bbl_cert_path="/tmp/bbl-cert"
  fi
  if [ -f "${BBL_LB_CERT_CHAIN}" ]; then
    bbl_cert_chain_flag="--lb-chain=${BBL_LB_CERT_CHAIN}"
  elif [ ! -z "${BBL_LB_CERT_CHAIN// }" ]; then
    echo "${BBL_LB_CERT_CHAIN}" > /tmp/bbl-cert-chain
    bbl_cert_chain_flag="--lb-chain=/tmp/bbl-cert-chain"
  fi
  if [ -f "${BBL_LB_KEY}" ]; then
    bbl_key_path="${BBL_LB_KEY}"
  else
    echo "${BBL_LB_KEY}" > /tmp/bbl-key
    bbl_key_path="/tmp/bbl-key"
  fi
  set -x
}

function main() {
#Using custom bbl,will be removed after next bbl release
  wget "https://github.com/norshtein/bosh-bootloader/releases/download/v7.3/bbl"
  chmod +x bbl
  sudo mv bbl /usr/local/bin
  echo $PATH

  local root_dir
  root_dir="${1}"

  check_fast_fails

  if [ "${BBL_IAAS}" == "gcp" ]; then
    pushd "bbl-state"
      write_gcp_service_account_key
    popd
  fi

  if [ "${BBL_IAAS}" == "azure" ]; then
    write_azure_service_principal_credential
  fi

   
  mkdir -p "bbl-state/${BBL_STATE_DIR}"
  pushd "bbl-state/${BBL_STATE_DIR}"
    bbl version

    local name_flag
    name_flag=""

    if [ -n "${BBL_ENV_NAME}" -a ! -f bbl-state.json ]; then
      name_flag="--name ${BBL_ENV_NAME}"
    fi

    local lb_flags
    lb_flags=""

    if [ "${SKIP_LB_CREATION}" == "false" ]; then
      local bbl_cert_chain_flag
      bbl_cert_chain_flag=""
      local bbl_cert_path
      local bbl_cert_key
      write_bbl_certs

      lb_flags="--lb-type=cf --lb-cert=${bbl_cert_path} ${bbl_cert_chain_flag} --lb-key=${bbl_key_path} --lb-domain=${LB_DOMAIN}"
    fi

    bbl --debug plan \
      ${name_flag} \
      ${lb_flags} > "${root_dir}/bbl_plan.txt" \

# Change to custom CPI version
    if [ ${USING_CUSTOM_CPI_VERSION} == true ]; then
      # Escape / in URL
      CPI_SHA1=$(echo ${CPI_SHA1} | sed 's:\/:\\\/:g')
      cat bosh-deployment/azure/cpi.yml | perl -0pe "s/(name: bosh-azure-cpi\s*version: .*\s*)url: .*\s*sha1: .*/\1url: ${CPI_URL}\n    sha1: ${CPI_SHA1}/" > tmp
      mv tmp bosh-deployment/azure/cpi.yml
    fi

    if [ -n "${BBL_CONFIG_DIR}" ]; then
      cp -r ${root_dir}/bbl-config/${BBL_CONFIG_DIR}/. .
    fi

    bbl --debug up \
      ${name_flag} \
      ${lb_flags} > "${root_dir}/bbl_up.txt"
    
  popd
}

trap "commit_bbl_state_dir ${PWD} '${GIT_COMMIT_MESSAGE}'" EXIT

main ${PWD}
